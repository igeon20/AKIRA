{"ast":null,"code":"var _jsxFileName = \"C:\\\\AKIRA\\\\frontend\\\\src\\\\components\\\\BotControl.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// ⚠️ 로컬 개발 환경에서 사용하는 API 주소\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = \"http://localhost:8000\";\nfunction BotControl() {\n  _s();\n  const [status, setStatus] = useState(false);\n\n  // 상태를 가져오는 함수\n  const fetchStatus = () => {\n    axios.get(`${API_BASE_URL}/bot/status`).then(res => setStatus(res.data.running)).catch(err => {\n      console.error(\"Error fetching bot status:\", err);\n      setStatus(false);\n    });\n  };\n  useEffect(() => {\n    // 페이지 로딩 시 최초 상태 확인\n    fetchStatus();\n\n    // 10초마다 상태 갱신\n    const interval = setInterval(fetchStatus, 10000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // 봇 시작 함수\n  const startBot = () => {\n    axios.post(`${API_BASE_URL}/bot/start`).then(() => {\n      console.log(\"Bot started successfully\");\n      fetchStatus(); // 상태 즉시 업데이트\n    }).catch(err => {\n      console.error(\"Error starting bot:\", err);\n      fetchStatus();\n    });\n  };\n\n  // 봇 정지 함수\n  const stopBot = () => {\n    axios.post(`${API_BASE_URL}/bot/stop`).then(() => {\n      console.log(\"Bot stopped successfully\");\n      fetchStatus();\n    }).catch(err => {\n      console.error(\"Error stopping bot:\", err);\n      fetchStatus();\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uBD07 \\uC0C1\\uD0DC:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: status ? \"✅ Bot Running\" : \"❌ Bot Stopped\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startBot,\n      style: {\n        marginRight: '10px',\n        padding: '10px 20px',\n        fontSize: '16px'\n      },\n      children: \"Start \\u25B6\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopBot,\n      style: {\n        padding: '10px 20px',\n        fontSize: '16px'\n      },\n      children: \"Stop \\u23F9\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(BotControl, \"iW7PMEIJc8b9DQPigLoTVxHyUqc=\");\n_c = BotControl;\nexport default BotControl;\nvar _c;\n$RefreshReg$(_c, \"BotControl\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","API_BASE_URL","BotControl","_s","status","setStatus","fetchStatus","get","then","res","data","running","catch","err","console","error","interval","setInterval","clearInterval","startBot","post","log","stopBot","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginRight","fontSize","_c","$RefreshReg$"],"sources":["C:/AKIRA/frontend/src/components/BotControl.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n// ⚠️ 로컬 개발 환경에서 사용하는 API 주소\r\nconst API_BASE_URL = \"http://localhost:8000\";\r\n\r\nfunction BotControl() {\r\n  const [status, setStatus] = useState(false);\r\n\r\n  // 상태를 가져오는 함수\r\n  const fetchStatus = () => {\r\n    axios.get(`${API_BASE_URL}/bot/status`)\r\n      .then(res => setStatus(res.data.running))\r\n      .catch(err => {\r\n        console.error(\"Error fetching bot status:\", err);\r\n        setStatus(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 페이지 로딩 시 최초 상태 확인\r\n    fetchStatus();\r\n\r\n    // 10초마다 상태 갱신\r\n    const interval = setInterval(fetchStatus, 10000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // 봇 시작 함수\r\n  const startBot = () => {\r\n    axios.post(`${API_BASE_URL}/bot/start`)\r\n      .then(() => {\r\n        console.log(\"Bot started successfully\");\r\n        fetchStatus(); // 상태 즉시 업데이트\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error starting bot:\", err);\r\n        fetchStatus();\r\n      });\r\n  };\r\n\r\n  // 봇 정지 함수\r\n  const stopBot = () => {\r\n    axios.post(`${API_BASE_URL}/bot/stop`)\r\n      .then(() => {\r\n        console.log(\"Bot stopped successfully\");\r\n        fetchStatus();\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error stopping bot:\", err);\r\n        fetchStatus();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div style={{textAlign: 'center', padding: '20px'}}>\r\n      <h2>봇 상태:</h2>\r\n      <h1>{status ? \"✅ Bot Running\" : \"❌ Bot Stopped\" }</h1>\r\n\r\n      <button \r\n        onClick={startBot} \r\n        style={{marginRight: '10px', padding: '10px 20px', fontSize: '16px'}}>\r\n        Start ▶️\r\n      </button>\r\n\r\n      <button \r\n        onClick={stopBot} \r\n        style={{padding: '10px 20px', fontSize: '16px'}}>\r\n        Stop ⏹️\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BotControl;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}